<% content_for :head do %>
  <script type="text/javascript">
    //create an empty arry to contain sub arrays for each of the casters in the model Casters
    var casters = new Array();

    //drop into the .erd template language to access the model
    <% Caster.all.each do |caster| %>
      //for each caster in casters create a sub array with the faction_id, caster_name, caster_id
      casters.push(new Array(<%= caster.faction_id %>, '<%= caster.title %>', <%= caster.id %>));
    <% end %>

  //function which is called whenever the list_faction_id select list changes
  function selectionFaction()
  {
    //select the list_faction_id select list from the DOM
    var selectedFaction = document.getElementById("list_faction_id").value;

    //select the list_caster_id select list from the DOM
    var options = document.getElementById("list_caster_id");

    //clear all options from the list_caser select box each time the function is called
    options.options.length=0;

    //counter to be used in the caster in casters for loop
    var i = 0

    //counter to be used in the option in newOptions for loop
    var j = 0

    //new array to contain all of the sub arrays which match the selected faciton in list_faction_id
    var newOptions = new Array();

    //for each caster in the Casters modle test for a match on faction ID
    for (caster in casters)
    {
      //if the faction id matches
      if ( casters[i][0] == selectedFaction)
      {
        //add a new sub arry to the newOptions array which contanis the caster_id and caster_title
        newOptions.push(new Array(casters[i][2],casters[i][1]));
      }

      //increment the i counter
      i++
    }

    //for each caster which was found to match add an option
    for (option in newOptions)
    {
      //create a new opt varrible each iteration for the options
	         var opt = document.createElement('option');

       //the value is the caster_id
       opt.value = (newOptions[j][0]);

       //the label is caster_title
       opt.innerHTML = (newOptions[j][1]);

       //append the option to list_caster_id
       options.appendChild(opt);

       //increment the j counter
       j++
     }
   }

   </script>
<% end %>
<%= form_for @list do |f| %>
<% if @list.errors.any? %>
<div id="error_explanation" class="row text-error">
	<div class="span12">
		<h3><%= pluralize(@list.errors.count, "error") %> prohibited this list from being saved:</h3>
    <ul>
    <% @list.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
    <% end %>
    </ul>
	</div>
</div>
<% end %>
<div class="row">
	<div class="span2">
		<%= f.label :title, "List Name" %>
	</div>
	<div class="span4">
		<%= f.text_field :title %>
	</div>
	<div class="span6">
		<!--Grid Placeholder -->
	</div>
</div>

<div class="row">
	<div class="span2">
		<%= f.label :size, ""%>
	</div>
	<div class="span4">
		<%= f.select :size, options_for_select(["Battlebox", "15", "25", "35", "50", "75", "100"]),include_blank: true %>
	</div>
	<div class="span6">
		<!--Grid Placeholder -->
	</div>
</div>

<div class="row">
	<div class="span2">
		<%= f.label :faction_id, "Faction"%>
	</div>
	<div class="span4">
		<%= f.collection_select(:faction_id, Faction.order(:id),:id,:title, options = {include_blank: true},html_options = {:onChange=>"selectionFaction();"} ) %>
	</div>
	<div class="span6">
		<!--Grid Placeholder -->
	</div>
</div>
<div class="row">
	<div class="span2">
			<%= f.label :caster_id %><br>
	</div>
	<div class="span2">
			<%= f.select :caster_id, options_for_select(["Select a Faction"]) %>
	</div>
</div>
<div class="row">
	<div class="span2">
			<%= f.label :body %><br>
	</div>
	<div class="span2">
			<%= f.text_area :body, class: 'field span10' %>
	</div>
</div>
<div class="row">
	<div class="span2">
			<%= f.submit %>
	</div>
</div>
<% end %>
